<?php
# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "includes/DefaultSettings.php" );

# If PHP's memory limit is very low, some operations may fail.
# ini_set( 'memory_limit', '20M' );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
} elseif ( empty( $wgNoOutputBuffer ) ) {
	## Compress output if the browser supports it
	if( !ini_get( 'zlib.output_compression' ) ) @ob_start( 'ob_gzhandler' );
}

$wgSitename         = "Umass Transit ST Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
$wgScriptPath = "";         # Path to the actual files. This should already be there
$wgArticlePath = "/$1";  # Virtual path. This directory MUST be different from the one used in $wgScriptPath
$wgUsePathInfo = true;        # Enable use of pretty URLs

## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL

$wgStylePath        = "$wgScriptPath/skins";
$wgStyleDirectory   = "$IP/skins";
require_once( "$IP/skins/umass/Resources.php" );
//$wgDefaultSkin      = "umass";
$wgLogo             = "$wgStylePath/common/images/st_logo.gif";
$wgAllowUserCss     = true;

//Enable favicon.ico
$wgFavicon = "$wgScriptPath/favicon.ico";

$wgUploadPath       = "$wgScriptPath/images";
$wgUploadDirectory  = "$IP/images";

$wgEnableEmail      = true;
$wgEnableUserEmail  = true;

$wgEmergencyContact = "transit-it@admin.umass.edu";
$wgPasswordSender = "adam@umass.edu";

## For a detailed description of the following switches see
## http://meta.wikimedia.org/Enotif and http://meta.wikimedia.org/Eauthent
## There are many more options for fine tuning available see
## /includes/DefaultSettings.php
## UPO means: this is also a user preference option
$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads             = true;
$wgUseImageResize            = true;

$wgLocalInterwiki   = $wgSitename;

/*
* Default privilege settings

 * Permission keys given to users in each group.
 * All users are implicitly in the '*' group including anonymous visitors;
 * logged-in users are all implicitly in the 'user' group. These will be
 * combined with the permissions of all groups that a given user is listed
 * in in the user_groups table.
 *
 * Functionality to make pages inaccessible has not been extensively tested
 * for security. Use at your own risk!
 *
 * This replaces wgWhitelistAccount and wgWhitelistEdit
 */
$wgGroupPermissions = array();

// Default anon privileges. Implicit group for all visitors 
$wgGroupPermissions['*']['read']       = true;
$wgGroupPermissions['*']['edit']       = true; //Not really, we protect every namespace below
$wgGroupPermissions['*']['edittalk']   = true; //Anon users CAN edit talk pages
$wgGroupPermissions['*']['createtalk'] = true;

// Implicit group for all logged-in accounts
$wgGroupPermissions['user'] = $wgGroupPermissions['*'];
$wgGroupPermissions['user']['editmyusercss']     = true;
$wgGroupPermissions['user']['editmyuserjs']      = true;
$wgGroupPermissions['user']['viewmywatchlist']   = true;
$wgGroupPermissions['user']['editmywatchlist']   = true;
$wgGroupPermissions['user']['viewmyprivateinfo'] = true;
$wgGroupPermissions['user']['editmyprivateinfo'] = true;
$wgGroupPermissions['user']['editmyoptions']     = true;
$wgGroupPermissions['user']['sendemail']         = true;

// Implicit group for accounts that pass $wgAutoConfirmAge
$wgGroupPermissions['autoconfirmed']['autoconfirmed'] = true;
$wgGroupPermissions['autoconfirmed']['editsemiprotected'] = true;

//group of users who have editing access
$wgGroupPermissions['editors' ]['read']            = true;
$wgGroupPermissions['editors' ]['edit']            = true;
$wgGroupPermissions['editors' ]['createpage']      = true;
$wgGroupPermissions['editors' ]['createtalk']      = true;
$wgGroupPermissions['editors' ]['minoredit']       = true;
$wgGroupPermissions['editors']['editpages']   	   = true;
$wgGroupPermissions['editors']['writeapi']         = true;

//create a special user group --> most access
$wgGroupPermissions['privileged' ]['move']               = true;
$wgGroupPermissions['privileged' ]['move-subpages']      = true;
$wgGroupPermissions['privileged' ]['move-rootuserpages'] = true;
$wgGroupPermissions['privileged' ]['read']               = true;
$wgGroupPermissions['privileged' ]['edit']               = true;
$wgGroupPermissions['privileged' ]['createpage']         = true;
$wgGroupPermissions['privileged' ]['createtalk']         = true;
$wgGroupPermissions['privileged' ]['upload']             = true;
$wgGroupPermissions['privileged' ]['reupload']           = true;
$wgGroupPermissions['privileged' ]['reupload-shared']    = true;
$wgGroupPermissions['privileged' ]['minoredit']          = true;
$wgGroupPermissions['privileged' ]['rollback']           = true;
$wgGroupPermissions['privileged' ]['editmain'] 	         = true;
$wgGroupPermissions['privileged' ]['purge']              = true; // can use ?action=purge without clicking "ok"

//groups of users who can upload
$wgGroupPermissions['uploaders' ]['upload']          = true;
$wgGroupPermissions['uploaders' ]['reupload']        = true;
$wgGroupPermissions['uploaders' ]['reupload-shared'] = true;

// Users with bot privilege can have their edits hidden
// from various log pages by default
$wgGroupPermissions['bot']['bot']               = true;
$wgGroupPermissions['bot']['autoconfirmed']     = true;
$wgGroupPermissions['bot']['editsemiprotected'] = true;
$wgGroupPermissions['bot']['nominornewtalk']    = true;
$wgGroupPermissions['bot']['autopatrol']        = true;
$wgGroupPermissions['bot']['suppressredirect']  = true;
$wgGroupPermissions['bot']['apihighlimits']     = true;
$wgGroupPermissions['bot']['writeapi']          = true;

// Most extra permission abilities go to sysops
$wgGroupPermissions['sysop']['block']              = true;
$wgGroupPermissions['sysop']['createaccount']      = true;
$wgGroupPermissions['sysop']['delete']             = true;
// can be separately configured for pages with > $wgDeleteRevisionsLimit revs
$wgGroupPermissions['sysop']['bigdelete']          = true;
// can view deleted history entries, but not see or restore the text
$wgGroupPermissions['sysop']['deletedhistory']     = true;
$wgGroupPermissions['sysop']['deletedtext']        = true;
$wgGroupPermissions['sysop']['undelete']           = true;
$wgGroupPermissions['sysop']['editinterface']      = true;
$wgGroupPermissions['sysop']['editusercss']        = true;
$wgGroupPermissions['sysop']['edituserjs']         = true;
$wgGroupPermissions['sysop']['import']             = true;
$wgGroupPermissions['sysop']['importupload']       = true;
$wgGroupPermissions['sysop']['move']               = true;
$wgGroupPermissions['sysop']['move-subpages']      = true;
$wgGroupPermissions['sysop']['move-rootuserpages'] = true;
$wgGroupPermissions['sysop']['patrol']             = true;
$wgGroupPermissions['sysop']['autopatrol']         = true;
$wgGroupPermissions['sysop']['protect']            = true;
$wgGroupPermissions['sysop']['editprotected']      = true;
$wgGroupPermissions['sysop']['proxyunbannable']    = true;
$wgGroupPermissions['sysop']['rollback']           = true;
$wgGroupPermissions['sysop']['upload']             = true;
$wgGroupPermissions['sysop']['reupload']           = true;
$wgGroupPermissions['sysop']['reupload-shared']    = true;
$wgGroupPermissions['sysop']['unwatchedpages']     = true;
$wgGroupPermissions['sysop']['autoconfirmed']      = true;
$wgGroupPermissions['sysop']['autoconfirmed']      = true;
$wgGroupPermissions['sysop']['editsemiprotected']  = true;
$wgGroupPermissions['sysop']['ipblock-exempt']     = true;
$wgGroupPermissions['sysop']['blockemail']         = true;
$wgGroupPermissions['sysop']['markbotedits']       = true;
$wgGroupPermissions['sysop']['apihighlimits']      = true;
$wgGroupPermissions['sysop']['browsearchive']      = true;
$wgGroupPermissions['sysop']['noratelimit']        = true;
$wgGroupPermissions['sysop']['movefile']           = true;
$wgGroupPermissions['sysop']['unblockself']        = true;
$wgGroupPermissions['sysop']['suppressredirect']   = true;

// Permission to change users' group assignments
$wgGroupPermissions['bureaucrat']['userrights']      = true;
// The following are default to sysops, but given to bureacrats instead.
$wgGroupPermissions['bureaucrat']['editinterface']   = true;
$wgGroupPermissions['bureaucrat']['import']          = true;
$wgGroupPermissions['bureaucrat']['importupload']    = true;
$wgGroupPermissions['bureaucrat']['upload_by_url']   = true;
$wgGroupPermissions['bureaucrat']['trackback']       = true;
$wgGroupPermissions['bureaucrat']['proxyunbannable'] = true;
$wgGroupPermissions['bureaucrat']['noratelimit']     = true;
$wgGroupPermissions['bureaucrat']['patrol']          = true;


// Implicit group for accounts with confirmed email addresses
// This has little use when email address confirmation is off
# Make it so users with confirmed e-mail addresses are in the group.
$wgAutopromote['emailconfirmed'] = APCOND_EMAILCONFIRMED;
# Hide group from user list. 
$wgImplicitGroups = array( 'emailconfirmed' );
# Finally, set it to true for the desired group.
$wgGroupPermissions['emailconfirmed']['emailconfirmed'] = true;

$wgImplicitGroups = array( '*', 'user', 'autoconfirmed', 'emailconfirmed' );

//Talk pages need the 'edittalk' permission (everyone has that)
$wgNamespaceProtection[NS_TALK] = array( 'edittalk' );

//Edit templates: allowed for priviliged users
$wgNamespaceProtection[NS_TEMPLATE] = array( 'editmain' );

//Edit most normal pages:  requires 'editpages', not 'edit'
$wgNamespaceProtection[NS_CATEGORY] = $wgNamespaceProtection[NS_PROJECT] =
$wgNamespaceProtection[NS_MAIN] = array( 'editpages' );

//Edit interfaces and special: only bureaucrats
$wgNamespaceProtection[NS_SPECIAL] = $wgNamespaceProtection[NS_MEDIAWIKI] = array( 'editinterface' );

//removes talk page link for non-logged-in users
$wgShowIPinHeader = false; 

//Added to support additional file types - adam 2007.01.18
$wgFileExtensions = array( 'png', 'gif', 'emf', 'wmf', 'jpg', 'jpeg', 'pdf', 'svg');

require_once( $IP.'/extensions/Cite/Cite.php' );	
require_once( $IP.'/extensions/Cite/SpecialCite.php' );

require_once( "$IP/extensions/ParserFunctions/ParserFunctions.php" );

require_once( $IP.'/extensions/ConfirmAccount/ConfirmAccount.php' );
#$wgAccountRequestTypes = array( 'readers', 'editors', 'users' );
$wgConfirmAccountRequestFormItems['Biography']['minWords'] = 0;
$wgConfirmAccountRequestFormItems['AreasOfInterest']['enabled'] = false;
$wgConfirmAccountRequestFormItems['CV']['enabled'] = false;
$wgConfirmAccountRequestFormItems['Links']['enabled'] = false;

$wgAccountRequestTypes = array( 0 => array( 'Drivers', 'editors' ),
                                1 => array( 'Passengers', 'user' ),
                                2 => array( 'Staff', 'bureaucrat' ) );

//Keys are in the Sensitive file.
require_once( "$IP/extensions/ConfirmEdit/ConfirmEdit.php" );
require_once( "$IP/extensions/ConfirmEdit/ReCaptcha.php" );
$wgCaptchaClass = 'ReCaptcha';

$wgUseAjax = true;
require_once( "$IP/extensions/CategoryTree/CategoryTree.php" );

require_once ( "$IP/extensions/SecurePages/SecurePages.php" );
$wgSecurePages = array(-1 => array( 'UserLogin', 'Preferences', 'ChangePassword'),);

include 'Sensitive.php';
?>
